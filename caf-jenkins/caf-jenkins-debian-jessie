############################################################
# Dockerfile for Jenkins slave with clang-4.0
# Based on Debian Jessie
############################################################

FROM debian:jessie
MAINTAINER Jakob Otto

# No official support for Debian Jessie. 
RUN echo "deb http://deb.debian.org/debian/ jessie main contrib non-free" > /etc/apt/sources.list \
   && echo "deb-src http://deb.debian.org/debian/ jessie main contrib non-free" >> /etc/apt/sources.list \
   && echo "deb http://security.debian.org/ jessie/updates main contrib non-free" >> /etc/apt/sources.list \
   && echo "deb-src http://security.debian.org/ jessie/updates main contrib non-free" >> /etc/apt/sources.list \
   && echo "deb http://archive.debian.org/debian jessie-backports main" >> /etc/apt/sources.list \
   && echo "deb-src http://archive.debian.org/debian jessie-backports main" >> /etc/apt/sources.list \
   && echo "Acquire::Check-Valid-Until \"false\";" >> /etc/apt/apt.conf

# Install Essentials
RUN apt-get update && \
  apt-get upgrade -y && \
  apt-get autoremove

##################### INSTALL TOOLS ########################

# Install Packages
RUN apt-get install -y git \
  wget \
  openssh-server \
  cmake \
  gcc g++ \
  clang-4.0 \
  libssl-dev \
  gcovr \
 && apt-get autoclean

#################### INSTALL JAVA 8 #######################

RUN apt-get update
RUN apt-get install -y -t jessie-backports openjdk-8-jdk
#RUN update-java-alternatives -s java-1.8.0-openjdk-amd64

####################### SETUP SSH #########################

# gen dummy keys, centos doesn't autogen them like ubuntu does
RUN /usr/bin/ssh-keygen -A

# Set SSH Configuration to allow remote logins without /proc write access
RUN sed -ri 's/^session\s+required\s+pam_loginuid.so$/session optional pam_loginuid.so/' \
	/etc/pam.d/sshd

# Create Jenkins User
RUN useradd jenkins -m -s /bin/bash

# set clang as default compiler
RUN echo "export CXX=clang++-4.0" >> /home/jenkins/.bashrc \
   && echo "export CC=clang-4.0" >> /home/jenkins/.bashrc

# Add public key for Jenkins login
RUN mkdir /home/jenkins/.ssh
COPY authorized_keys /home/jenkins/.ssh/authorized_keys
RUN chown -R jenkins /home/jenkins
RUN chgrp -R jenkins /home/jenkins
RUN chmod 600 /home/jenkins/.ssh/authorized_keys
RUN chmod 700 /home/jenkins/.ssh

# Add the jenkins user to sudoers
# RUN echo "jenkins  ALL=(ALL)  ALL" >> etc/sudoers

# Set Name Servers
# COPY /files/resolv.conf /etc/resolv.conf

# Ubuntu requires this dir to be created
RUN mkdir -p /var/run/sshd

# Expose SSH port and run SSHD
EXPOSE 22
CMD ["/usr/sbin/sshd","-D"]
